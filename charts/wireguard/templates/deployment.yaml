apiVersion: apps/v1
kind: Deployment
metadata:
  name: wireguard-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wireguard
  template:
    metadata:
      labels:
        app: wireguard
    spec:
      containers:
        - name: wireguard
          image: ghcr.io/wg-easy/wg-easy:14
          command:
            - sh
            - "-c"
            - sysctl -w net.ipv4.ip_forward=1
            - sysctl -w net.ipv4.conf.all.src_valid_mark=1
          env:
            - name: WG_HOST
              value: "{{ .Values.host.server}}"
            - name: WG_DEFAULT_DNS
              value: "{{ .Values.dns}}"
            - name: WG_DEFAULT_ADDRESS
              value: "{{ .Values.network}}"
            - name: WG_PORT
              value: "{{ .Values.port }}"
            - name: WG_ALLOWED_IPS
              value: "{{ .Values.allowed_ips }}"
            - name: WG_POST_UP
              value: "{{ .Values.firewall.post_up }}"
            - name: WG_POST_DOWN
              value: "{{ .Values.firewall.post_down }}"
          securityContext:
            privileged: true
            capabilities:
              add: [ "NET_ADMIN", "SYS_MODULE" ]
          ports:
            - containerPort: 51820
              name: wireguard
              protocol: UDP
            - containerPort: 51821
              name: http
              protocol: TCP
          volumeMounts:
            - name: wireguard-etc
              mountPath: /etc/wireguard
            - name: wireguard-config
              mountPath: /config
            - name: wireguard-modules
              mountPath: /lib/modules
      volumes:
        - name: wireguard-etc
          persistentVolumeClaim:
            claimName: wireguard-etc-pvc
        - name: wireguard-config
          persistentVolumeClaim:
            claimName: wireguard-config-pvc
        - name: wireguard-modules
          persistentVolumeClaim:
            claimName: wireguard-modules-pvc